- hosts: k8s-master0
  connection: lxd
  become: yes
  gather_facts: yes

  tasks:
    - name: Get the token for joining the worker nodes
      become: yes
      become_user: kube
      shell: kubeadm token create  --print-join-command
      register: kubernetes_join_command


    - name: Debug join command 
      debug:
        msg: "{{ kubernetes_join_command.stdout}}"


    - name: Copy join command to local file.
      become: False
      # become: yes
      local_action: copy content="{{ kubernetes_join_command.stdout_lines[0] }}"  dest="{{hosttempfile_location}}/kubernetes_join_command" mode=0777

- hosts: localhost
  connection: local
  tasks:
    - add_host:
        name: "{{ item }}"
        groups: my_dynamic_group
      loop: "{{ groups.all|select('match', my_pattern)|list }}"
      vars:
        my_pattern: '^k8s-worker\d+$'

- hosts: my_dynamic_group
  connection: lxd
  become_method: sudo
  become_user: root
  gather_facts: yes
  tasks:
     - debug:
        var: inventory_hostname



     - name: create the kube user account
       user: name=kube append=yes state=present createhome=yes shell=/bin/bash

     - name: allow 'kube' to use sudo without needing a password
       lineinfile:
          dest: /etc/sudoers
          line: 'kube ALL=(ALL) NOPASSWD: ALL'
          validate: 'visudo -cf %s'



     - name: install containerd
       shell: |
               sudo apt update -qq && sudo apt install -qq -y containerd apt-transport-https curl 
               sudo mkdir -p /etc/containerd
               sudo containerd config default | sudo tee /etc/containerd/config.toml
               sudo systemctl restart containerd
               sudo systemctl enable containerd

     - name: disable swap
       shell: |
               sudo swapoff -a
               sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

     - name: install and configure dependencies gnupg
       become_method: sudo
       become_user: root
       shell: sudo apt install -y gnupg
                
               
     - name: install and configure dependencies
       become_method: sudo
       become_user: root
       shell: curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -


     - name: Create kubernetes repo file
       file:
         path: "/etc/apt/sources.list.d/kubernetes.list"
         state: "touch"

     - name: Add K8s Source
       blockinfile:
         path: "/etc/apt/sources.list.d/kubernetes.list"
         block: |
               deb https://apt.kubernetes.io/ kubernetes-xenial main

     - name: install kubernetes
       shell: |
               sudo apt-get update
               sudo apt-get install -y kubeadm=1.22.0-00 kubelet=1.22.0-00 kubectl=1.22.0-00
               sudo apt-mark hold kubelet kubeadm kubectl

     - name: disable swap for kubelet 
       shell: |
               echo 'KUBELET_EXTRA_ARGS="--fail-swap-on=false"' |sudo tee /etc/default/kubelet
               sudo  systemctl restart kubelet
               



     - name: Hack required to provision K8s v1.15+ in LXC containers
       shell: |
               sudo apt install -qq -y net-tools
               sudo mknod /dev/kmsg c 1 11
               echo 'mknod /dev/kmsg c 1 11' | sudo tee  /etc/rc.local
               sudo chmod +x /etc/rc.local
         
     - name: patch to shared mount propagation to run calico node 
       shell: sudo mount --make-rshared /

     - name: patch to create symlink for /dev/kmsg for kubelet proper functionality
       shell: |
               echo 'L /dev/kmsg - - - - /dev/console' > /etc/tmpfiles.d/kmsg.conf


  



  
     - name: Copy join command from Ansiblehost to the worker nodes.
       become: yes
       copy:
        src: "{{hosttempfile_location}}/kubernetes_join_command"
        dest: /tmp/kubernetes_join_command
        mode: 0777

     - name: modify join command to ignore modprobe with --ignore-preflight-errors
       become: yes
       command: sudo sed -i s/$/" --ignore-preflight-errors=all"/ /tmp/kubernetes_join_command


     - name: Join the Worker nodes to the cluster.
       become: yes
       command: sh /tmp/kubernetes_join_command
       register: joined_or_not

     - name: prepare nodes to connect to nfs server
       shell: sudo   apt install -y nfs-common






     - name: Create a new file with permissions
       file:
          path: "/root/patch.sh"
          state: touch
          mode: 0755
          owner: root

     - name: add patch.sh file  content
       copy:
          dest: "/root/patch.sh"
          content: |
              #!/bin/bash
              sudo apt install -qq -y net-tools
              sudo mknod /dev/kmsg c 1 11
              echo 'mknod /dev/kmsg c 1 11' | sudo tee  /etc/rc.local
              sudo chmod +x /etc/rc.local
              sudo mount --make-rshared /
              echo 'L /dev/kmsg - - - - /dev/console' > /etc/tmpfiles.d/kmsg.conf

     - name: Create a new service file  with permissions
       file:
          path: "/etc/systemd/system/patch.service"
          state: touch
          mode: 0777
          owner: root

     - name: add patch.service file  content
       copy:
          dest: "/etc/systemd/system/patch.service"
          content: |
                [Unit]
                Description=Job that runs your user script to patch lxd

                [Service]
                ExecStart=/bin/bash /root/patch.sh
                Type=oneshot
                RemainAfterExit=yes

                [Install]
                WantedBy=multi-user.target



     - name: enable patch.service
       shell: |
               sudo systemctl enable patch.service
               sudo systemctl start patch.service